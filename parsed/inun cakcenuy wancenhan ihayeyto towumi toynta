("derived-tree-120925" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("S" . "r"))) (((("NP" . ""))) (((("N" . ""))) (((("inun" . "")) :connector :LINE)) ) )  (((("VP" . "r"))) (((("NP" . "r"))) (((("NP" . ""))) (((("N" . ""))) (((("cakcenuy" . "")) :connector :LINE)) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("S" . "c"))) (((("S" . "r"))) (((("NP" . "0")) :constraints "NA" :constraint-type :NA) (((("" . "0")))) )  (((("VP" . ""))) (((("NP" . "1")) :constraints "NA" :constraint-type :NA) (((("" . "1")))) )  (((("AP" . ""))) (((("A" . ""))) (((("wancenhan" . "")) :connector :LINE)) ) ) ) )  (((("NP" . "w")) :constraints "NA" :constraint-type :NA) (((("" . "w")))) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("N" . ""))) (((("ihayeyto" . "")) :connector :LINE)) ) ) ) )  (((("VP" . "f")) :constraints "NA" :constraint-type :NA) (((("NP" . ""))) (((("N" . ""))) (((("towumi" . "")) :connector :LINE)) ) )  (((("VP" . "0"))) (((("V" . ""))) (((("toynta" . "")) :connector :LINE)) ) ) ) ) ) 
("derived-tree-120926" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("S" . "r"))) (((("NP" . ""))) (((("N" . ""))) (((("inun" . "")) :connector :LINE)) ) )  (((("VP" . "r"))) (((("NP" . "r"))) (((("NP" . ""))) (((("N" . ""))) (((("cakcenuy" . "")) :connector :LINE)) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("S" . "c"))) (((("S" . "r"))) (((("NP" . "0")) :constraints "NA" :constraint-type :NA) (((("" . "0")))) )  (((("VP" . ""))) (((("NP" . "1")) :constraints "NA" :constraint-type :NA) (((("" . "1")))) )  (((("AP" . ""))) (((("A" . ""))) (((("wancenhan" . "")) :connector :LINE)) ) ) ) )  (((("NP" . "w")) :constraints "NA" :constraint-type :NA) (((("" . "w")))) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("N" . ""))) (((("ihayeyto" . "")) :connector :LINE)) ) ) ) )  (((("VP" . "f")) :constraints "NA" :constraint-type :NA) (((("NP" . ""))) (((("N" . ""))) (((("towumi" . "")) :connector :LINE)) ) )  (((("VP" . "0"))) (((("V" . ""))) (((("toynta" . "")) :connector :LINE)) ) ) ) ) ) 
("derived-tree-120927" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("S" . "r"))) (((("NP" . "0")) :constraints "NA" :constraint-type :NA) (((("" . "0")))) )  (((("VP" . "r"))) (((("NP" . "r"))) (((("NP" . "r"))) (((("NP" . ""))) (((("N" . ""))) (((("inun" . "")) :connector :LINE)) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("N" . ""))) (((("cakcenuy" . "")) :connector :LINE)) ) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("S" . "c"))) (((("S" . "r"))) (((("NP" . "0")) :constraints "NA" :constraint-type :NA) (((("" . "0")))) )  (((("VP" . ""))) (((("NP" . "1")) :constraints "NA" :constraint-type :NA) (((("" . "1")))) )  (((("AP" . ""))) (((("A" . ""))) (((("wancenhan" . "")) :connector :LINE)) ) ) ) )  (((("NP" . "w")) :constraints "NA" :constraint-type :NA) (((("" . "w")))) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("N" . ""))) (((("ihayeyto" . "")) :connector :LINE)) ) ) ) )  (((("VP" . "f")) :constraints "NA" :constraint-type :NA) (((("NP" . ""))) (((("N" . ""))) (((("towumi" . "")) :connector :LINE)) ) )  (((("VP" . "0"))) (((("V" . ""))) (((("toynta" . "")) :connector :LINE)) ) ) ) ) ) 
("derived-tree-120928" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("S" . "r"))) (((("NP" . "0")) :constraints "NA" :constraint-type :NA) (((("" . "0")))) )  (((("VP" . "r"))) (((("NP" . "r"))) (((("NP" . ""))) (((("N" . ""))) (((("inun" . "")) :connector :LINE)) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("NP" . ""))) (((("N" . ""))) (((("cakcenuy" . "")) :connector :LINE)) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("S" . "c"))) (((("S" . "r"))) (((("NP" . "0")) :constraints "NA" :constraint-type :NA) (((("" . "0")))) )  (((("VP" . ""))) (((("NP" . "1")) :constraints "NA" :constraint-type :NA) (((("" . "1")))) )  (((("AP" . ""))) (((("A" . ""))) (((("wancenhan" . "")) :connector :LINE)) ) ) ) )  (((("NP" . "w")) :constraints "NA" :constraint-type :NA) (((("" . "w")))) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("N" . ""))) (((("ihayeyto" . "")) :connector :LINE)) ) ) ) ) )  (((("VP" . "f")) :constraints "NA" :constraint-type :NA) (((("NP" . ""))) (((("N" . ""))) (((("towumi" . "")) :connector :LINE)) ) )  (((("VP" . "0"))) (((("V" . ""))) (((("toynta" . "")) :connector :LINE)) ) ) ) ) ) 
("derived-tree-120929" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("S" . "r"))) (((("NP" . "0")) :constraints "NA" :constraint-type :NA) (((("" . "0")))) )  (((("VP" . "r"))) (((("NP" . "r"))) (((("NP" . "r"))) (((("NP" . ""))) (((("N" . ""))) (((("inun" . "")) :connector :LINE)) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("N" . ""))) (((("cakcenuy" . "")) :connector :LINE)) ) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("S" . "c"))) (((("S" . "r"))) (((("NP" . "0")) :constraints "NA" :constraint-type :NA) (((("" . "0")))) )  (((("VP" . ""))) (((("NP" . "1")) :constraints "NA" :constraint-type :NA) (((("" . "1")))) )  (((("AP" . ""))) (((("A" . ""))) (((("wancenhan" . "")) :connector :LINE)) ) ) ) )  (((("NP" . "w")) :constraints "NA" :constraint-type :NA) (((("" . "w")))) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("N" . ""))) (((("ihayeyto" . "")) :connector :LINE)) ) ) ) )  (((("VP" . "f")) :constraints "NA" :constraint-type :NA) (((("NP" . ""))) (((("N" . ""))) (((("towumi" . "")) :connector :LINE)) ) )  (((("VP" . "0"))) (((("V" . ""))) (((("toynta" . "")) :connector :LINE)) ) ) ) ) ) 
("derived-tree-120930" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("S" . "r"))) (((("NP" . "0")) :constraints "NA" :constraint-type :NA) (((("" . "0")))) )  (((("VP" . "r"))) (((("NP" . "r"))) (((("NP" . ""))) (((("N" . ""))) (((("inun" . "")) :connector :LINE)) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("NP" . ""))) (((("N" . ""))) (((("cakcenuy" . "")) :connector :LINE)) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("S" . "c"))) (((("S" . "r"))) (((("NP" . "0")) :constraints "NA" :constraint-type :NA) (((("" . "0")))) )  (((("VP" . ""))) (((("NP" . "1")) :constraints "NA" :constraint-type :NA) (((("" . "1")))) )  (((("AP" . ""))) (((("A" . ""))) (((("wancenhan" . "")) :connector :LINE)) ) ) ) )  (((("NP" . "w")) :constraints "NA" :constraint-type :NA) (((("" . "w")))) ) )  (((("NP" . "f")) :constraints "NA" :constraint-type :NA) (((("N" . ""))) (((("ihayeyto" . "")) :connector :LINE)) ) ) ) ) )  (((("VP" . "f")) :constraints "NA" :constraint-type :NA) (((("NP" . ""))) (((("N" . ""))) (((("towumi" . "")) :connector :LINE)) ) )  (((("VP" . "0"))) (((("V" . ""))) (((("toynta" . "")) :connector :LINE)) ) ) ) ) ) 
