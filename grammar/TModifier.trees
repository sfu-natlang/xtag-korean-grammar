("DP" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "NP_f.t:<case> = NP_r.b:<case>
NP_f.t:<aux-pp> = NP_r.b:<aux-pp>
NP_f.t:<adv-pp> = NP_r.b:<adv-pp>
NP_f.t:<topic> = NP_r.b:<topic>

NP_f.t:<type> = NP_r.b:<type>
NP_f.t:<accept_mod>=+" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("NP" . "r"))) (((("DP" . ""))) (((("D" . "")) :headp T)) )  (((("NP" . "f")) :footp T :constraints "NA" :constraint-type :NA)) ) 
("ADP-V" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "VP_f.t:<assign_case0>=VP_r.b:<assign_case0>
VP_f.t:<tense>=VP_r.b:<tense>
VP_f.t:<mode>=VP_r.b:<mode>
VP_f.t:<clause-type>=VP_r.b:<clause-type>
VP_f.t:<ending>=VP_r.b:<ending>
VP_f.t:<pre-ending>=VP_r.b:<pre-ending>
" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("VP" . "r"))) (((("ADP" . ""))) (((("AD" . "")) :headp T)) )  (((("VP" . "f")) :footp T :constraints "NA" :constraint-type :NA)) ) 
("NP" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "NP_f.t:<case> =  NP_r.b:<case>
NP_f.t:<aux-pp> =  NP_r.b:<aux-pp>
NP_f.t:<adv-pp> =  NP_r.b:<adv-pp>
NP_f.t:<topic> =  NP_r.b:<topic>
NP_f.t:<type> =  NP_r.b:<type>

N.t:<case> = NP.b:<case>
N.t:<case>=gen
N.t:<adv-pp>=NP.b:<adv-pp>
N.t:<aux-pp>=NP.b:<aux-pp>
N.t:<type> = NP.b:<type>

NP_f.t:<accept_mod>=+" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("NP" . "r"))) (((("NP" . ""))) (((("N" . "")) :headp T)) )  (((("NP" . "f")) :footp T :constraints "NA" :constraint-type :NA)) ) 
("ADP-S" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "S_f.t:<tense> = S_r.b:<tense>
S_f.t:<mode> = S_r.b:<mode>
S_f.t:<clause-type> = S_r.b:<clause-type>
S_f.t:<ending> = S_r.b:<ending>
S_f.t:<pre-ending> = S_r.b:<pre-ending>
" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("S" . "r"))) (((("ADP" . ""))) (((("AD" . "")) :headp T)) )  (((("S" . "f")) :footp T :constraints "NA" :constraint-type :NA)) ) 
("NP-V" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "N.t:<case>=NP.b:<case>
N.t:<case>=adv
N.t:<aux-pp>=NP.b:<aux-pp>
N.t:<adv-pp>=NP.b:<adv-pp>
N.t:<topic>=NP.b:<topic>
N.t:<type>=NP.b:<type>


VP_f.t:<assign_case0>=VP_r.b:<assign_case0>
VP_f.t:<tense>=VP_r.b:<tense>
VP_f.t:<mode>=VP_r.b:<mode>
VP_f.t:<clause-type>=VP_r.b:<clause-type>
VP_f.t:<ending>=VP_r.b:<ending>
VP_f.t:<pre-ending>=VP_r.b:<pre-ending>

" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("VP" . "r"))) (((("NP" . ""))) (((("N" . "")) :headp T)) )  (((("VP" . "f")) :footp T :constraints "NA" :constraint-type :NA)) ) 
("NP-conj" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "NP_f.t:<case>=NP_r.b:<case>
NP_f.t:<aux-pp>=NP_r.b:<aux-pp>
NP_f.t:<adv-pp>=NP_r.b:<adv-pp>
NP_f.t:<topic>=NP_r.b:<topic>
NP_f.t:<type>=NP_r.b:<type>
" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("NP" . "r"))) (((("NP" . "o")) :substp T :constraints "" :constraint-type :DUMMY))  (((("Conj" . "")) :headp T))  (((("NP" . "f")) :footp T)) ) 
("NP-S" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "N.t:<case>=NP.b:<case>
N.t:<aux-pp>=NP.b:<aux-pp>
N.t:<adv-pp>=NP.b:<adv-pp>
N.t:<topic>=NP.b:<topic>
N.t:<type>=NP.b:<type>

S_f.t:<tense> = S_r.b:<tense>
S_f.t:<mode> = S_r.b:<mode>
S_f.t:<clause-type> = S_r.b:<clause-type>
S_f.t:<ending> = S_r.b:<ending>
S_f.t:<pre-ending> = S_r.b:<pre-ending>

N.t:<case>=adv" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("S" . "r"))) (((("NP" . ""))) (((("N" . "")) :headp T)) )  (((("S" . "f")) :footp T :constraints "NA" :constraint-type :NA)) ) 
("ADP-A" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "AP_f.t:<assign_case0>=AP_r.b:<assign_case0>
AP_f.t:<tense>=AP_r.b:<tense>
AP_f.t:<mode>=AP_r.b:<mode>
AP_f.t:<clause-type>=AP_r.b:<clause-type>
AP_f.t:<ending>=AP_r.b:<ending>
AP_f.t:<pre-ending>=AP_r.b:<pre-ending>
" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("AP" . "r"))) (((("ADP" . ""))) (((("AD" . "")) :headp T)) )  (((("AP" . "f")) :footp T :constraints "NA" :constraint-type :NA)) ) 
