("VP" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "V.t:<mode>=VP_r.b:<mode>
V.t:<clause-type>=VP_r.b:<clause-type>
V.t:<tense>=VP_r.b:<tense>
V.t:<assign_case0>=VP_r.b:<assign_case0>
V.t:<ending>=VP_r.b:<ending>
V.t:<pre-ending>=VP_r.b:<pre-ending>

VP_f.t:<clause-type>=aux-connect" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("VP" . "r"))) (((("VP" . "f")) :footp T :constraints "NA" :constraint-type :NA))  (((("V" . "")) :headp T)) ) 
("NP-aux" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "N.t:<mode>=NP.b:<mode>
NP.b:<mode> = NP.t:<mode>
NP.t:<mode>=VP_r.b:<mode>
N.t:<tense>=NP.b:<tense>
NP.b:<tense> = NP.t:<tense>
NP.t:<tense>=VP_r.b:<tense>
N.t:<clause-type>=NP.b:<clause-type>
NP.b:<clause-type> = NP.t:<clause-type>
NP.t:<clause-type>=VP_r.b:<clause-type>
N.t:<ending>=NP.b:<ending>
NP.b:<ending> = NP.t:<ending>
NP.t:<ending>=VP_r.b:<ending>
N.t:<pre-ending>=NP.b:<pre-ending>
NP.b:<pre-ending> = NP.t:<pre-ending>
NP.t:<pre-ending>=VP_r.b:<pre-ending>
N.t:<assign_case0>=NP.b:<assign_case0>
NP.b:<assign_case0> = NP.t:<assign_case0>
NP.t:<assign_case0>=VP_r.b:<assign_case0>

VP_f.t:<clause-type>=aux-connect" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("VP" . "r")) :display-feature? T) (((("VP" . "f")) :display-feature? T :footp T :constraints "NA" :constraint-type :NA))  (((("NP" . "")) :display-feature? T) (((("N" . "")) :display-feature? T :headp T)) ) ) 
("vNXVX" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "VP_f.t:<mode> = adnom
N.t:<mode> = nom
" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("VP" . "r"))) (((("NP" . "")) :constraints "NA" :constraint-type :NA) (((("VP" . "f")) :footp T))  (((("N" . "")) :headp T)) )  (((("V" . "")) :headp T :constraints "NA" :constraint-type :NA)) ) 
("vVXNXVX" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "VP_f.t:<mode> = ci
V_1.t:<mode> = adnom
N_1.t:<mode> = nom
V.t:<tense> = VP_r.b:<tense>
V.t:<mode> = VP_r.b:<mode>
V.t:<assign_case> = VP_r.b:<assign_case>
" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("VP" . "r"))) (((("NP" . "1")) :constraints "NA" :constraint-type :NA) (((("VP" . "1"))) (((("VP" . "f")) :footp T))  (((("V" . "1")) :headp T :constraints "NA" :constraint-type :NA)) )  (((("N" . "1")) :headp T)) )  (((("V" . "")) :headp T :constraints "NA" :constraint-type :NA)) ) 
("vVX1VX2" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "VP_f.t:<mode> = ci
V_1.t:<mode> = aya
V_1.t:<mode> = VP.b:<mode>
V_2.t:<mode> = VP_r.b:<mode>
V_2.t:<tense> = VP_r.b:<tense>
V_2.t:<assign_case> = VP_r.b:<assign_case>

" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("VP" . "r"))) (((("VP" . ""))) (((("VP" . "f")) :footp T))  (((("V" . "1")) :headp T)) )  (((("V" . "2")) :headp T)) ) 
