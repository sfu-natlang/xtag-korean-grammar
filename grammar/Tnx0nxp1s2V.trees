("nx0nxp1s2V" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "V.t:<assign_case0> = VP_0.b:<assign_case0>
VP_0.b:<assign_case0> = VP_1.t:<assign_case0>
VP_1.t:<assign_case0> = VP_2.b:<assign_case0>
VP_2.t:<assign_case0> =  NP_0.t:<case>
NP_0.t:<case> = nom
V.t:<assign_case1> = VP_0.b:<assign_case1>
VP_0.b:<assign_case1> = VP_1.t:<assign_case1>
VP_1.t:<assign_case1> = VP_2.b:<assign_case1>
VP_2.t:<assign_case1> =  NP_1.t:<case>

NP_1.t:<case> =adv

V.t:<tense> = VP_0.b:<tense>
VP_0.b:<tense> = VP_1.t:<tense>
VP_1.t:<tense> = VP_2.b:<tense>
VP_2.t:<tense>=S_r.b:<tense>
V.t:<mode> = VP_0.b:<mode>
VP_0.b:<mode> = VP_1.t:<mode>
VP_1.t:<mode> = VP_2.b:<mode>
VP_2.t:<mode>=S_r.b:<mode>
V.t:<clause-type> = VP_0.b:<clause-type>
VP_0.b:<clause-type> = VP_1.t:<clause-type>
VP_1.t:<clause-type> = VP_2.b:<clause-type>
VP_2.t:<clause-type>=S_r.b:<clause-type>
V.t:<ending> = VP_0.b:<ending>
VP_0.b:<ending> = VP_1.t:<ending>
VP_1.t:<ending> = VP_2.b:<ending>
VP_2.t:<ending>=S_r.b:<ending>
V.t:<pre-ending> = VP_0.b:<pre-ending>
VP_0.b:<pre-ending> = VP_1.t:<pre-ending>
VP_1.t:<pre-ending> = VP_2.b:<pre-ending>
VP_2.t:<pre-ending>=S_r.b:<pre-ending>

S_2.t:<clause-type>=subord

V.t:<arg_type1> = VP_0.t:<arg_type1>
VP_0.t:<arg_type1> = VP_1.t:<arg_type1>
VP_1.t:<arg_type1> = VP_2.t:<arg_type1>
VP_2.t:<arg_type1> =  NP_0.t:<type>

V.t:<arg_type2> = VP_0.t:<arg_type2>
VP_0.t:<arg_type2> = VP_1.t:<arg_type2>
VP_1.t:<arg_type2> = VP_2.t:<arg_type2>
VP_2.t:<arg_type2> =  NP_1.t:<type>" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("S" . "r"))) (((("NP" . "0")) :substp T))  (((("VP" . "2"))) (((("NP" . "1")) :substp T))  (((("VP" . "1"))) (((("S" . "2")) :footp T :constraints "NA" :constraint-type :NA))  (((("VP" . "0"))) (((("V" . "")) :headp T)) ) ) ) ) 
("_nxp1s2V" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "V.t:<assign_case0> = VP_0.b:<assign_case0>
VP_0.b:<assign_case0> = VP_1.t:<assign_case0>
VP_1.t:<assign_case0> = VP_2.b:<assign_case0>
VP_2.t:<assign_case0> =  NP_0.t:<case>
NP_0.t:<case> = nom
NP_0.t:<accept_mod>=-

V.t:<assign_case1> = VP_0.b:<assign_case1>
VP_0.b:<assign_case1> = VP_1.t:<assign_case1>
VP_1.t:<assign_case1> = VP_2.b:<assign_case1>
VP_2.t:<assign_case1> =  NP_1.t:<case>

NP_1.t:<case> =adv

V.t:<tense> = VP_0.b:<tense>
VP_0.b:<tense> = VP_1.t:<tense>
VP_1.t:<tense> = VP_2.b:<tense>
VP_2.t:<tense>=S_r.b:<tense>
V.t:<mode> = VP_0.b:<mode>
VP_0.b:<mode> = VP_1.t:<mode>
VP_1.t:<mode> = VP_2.b:<mode>
VP_2.t:<mode>=S_r.b:<mode>
V.t:<clause-type> = VP_0.b:<clause-type>
VP_0.b:<clause-type> = VP_1.t:<clause-type>
VP_1.t:<clause-type> = VP_2.b:<clause-type>
VP_2.t:<clause-type>=S_r.b:<clause-type>
V.t:<ending> = VP_0.b:<ending>
VP_0.b:<ending> = VP_1.t:<ending>
VP_1.t:<ending> = VP_2.b:<ending>
VP_2.t:<ending>=S_r.b:<ending>
V.t:<pre-ending> = VP_0.b:<pre-ending>
VP_0.b:<pre-ending> = VP_1.t:<pre-ending>
VP_1.t:<pre-ending> = VP_2.b:<pre-ending>
VP_2.t:<pre-ending>=S_r.b:<pre-ending>

S_2.t:<clause-type>=subord



V.t:<arg_type1> = VP_0.t:<arg_type1>
VP_0.t:<arg_type1> = VP_1.t:<arg_type1>
VP_1.t:<arg_type1> = VP_2.t:<arg_type1>
VP_2.t:<arg_type1> =  NP_0.t:<type>

V.t:<arg_type2> = VP_0.t:<arg_type2>
VP_0.t:<arg_type2> = VP_1.t:<arg_type2>
VP_1.t:<arg_type2> = VP_2.t:<arg_type2>
VP_2.t:<arg_type2> =  NP_1.t:<type>



" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("S" . "r"))) (((("NP" . "0"))) (((("" . "0")))) )  (((("VP" . "2"))) (((("NP" . "1")) :substp T))  (((("VP" . "1"))) (((("S" . "2")) :footp T :constraints "NA" :constraint-type :NA))  (((("VP" . "0"))) (((("V" . "")) :headp T)) ) ) ) ) 
("nx0nxp1s2VNP" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "V.t:<assign_case0> = VP_0.b:<assign_case0>
VP_0.b:<assign_case0> = VP_1.t:<assign_case0>
VP_1.t:<assign_case0> = VP_2.b:<assign_case0>
VP_2.t:<assign_case0> =  NP_0.t:<case>
NP_0.t:<case> = nom
V.t:<assign_case1> = VP_0.b:<assign_case1>
VP_0.b:<assign_case1> = VP_1.t:<assign_case1>
VP_1.t:<assign_case1> = VP_2.b:<assign_case1>
VP_2.t:<assign_case1> =  NP_1.t:<case>

NP_1.t:<case> =adv

V.t:<tense> = VP_0.b:<tense>
VP_0.b:<tense> = VP_1.t:<tense>
VP_1.t:<tense> = VP_2.b:<tense>
VP_2.t:<tense>=S_r.b:<tense>
V.t:<clause-type> = VP_0.b:<clause-type>
VP_0.b:<clause-type> = VP_1.t:<clause-type>
VP_1.t:<clause-type> = VP_2.b:<clause-type>
VP_2.t:<clause-type>=S_r.b:<clause-type>
V.t:<ending> = VP_0.b:<ending>
VP_0.b:<ending> = VP_1.t:<ending>
VP_1.t:<ending> = VP_2.b:<ending>
VP_2.t:<ending>=S_r.b:<ending>
V.t:<pre-ending> = VP_0.b:<pre-ending>
VP_0.b:<pre-ending> = VP_1.t:<pre-ending>
VP_1.t:<pre-ending> = VP_2.b:<pre-ending>
VP_2.t:<pre-ending>=S_r.b:<pre-ending>

S_2.t:<clause-type>=subord



V.t:<case> = VP_0.t:<case>
VP_0.t:<case> = VP_1.t:<case>
VP_1.t:<case> = VP_2.b:<case>
VP_2.t:<case> = S_r.t:<case>
S_r.t:<case> = NP.b:<case>

V.t:<aux-pp> = VP_0.t:<aux-pp>
VP_0.t:<aux-pp> = VP_1.t:<aux-pp>
VP_1.t:<aux-pp> = VP_2.b:<aux-pp>
VP_2.t:<aux-pp> = S_r.t:<aux-pp>
S_r.t:<aux-pp> = NP.b:<aux-pp>

V.t:<adv-pp> = VP_0.t:<adv-pp>
VP_0.t:<adv-pp> = VP_1.t:<adv-pp>
VP_1.t:<adv-pp> = VP_2.b:<adv-pp>
VP_2.t:<adv-pp> = S_r.t:<adv-pp>
S_r.t:<adv-pp> = NP.b:<adv-pp>


V.t:<topic> = VP_0.t:<topic>
VP_0.t:<topic> = VP_1.t:<topic>
VP_1.t:<topic> = VP_2.b:<topic>
VP_2.t:<topic> = S_r.t:<topic>
S_r.t:<topic> = NP.b:<topic>


S_r.b:<clause-type> = nominal
S_r.b:<ending>=ki/um


V.t:<arg_type1> = VP_0.t:<arg_type1>
VP_0.t:<arg_type1> = VP_1.t:<arg_type1>
VP_1.t:<arg_type1> = VP_2.t:<arg_type1>
VP_2.t:<arg_type1> =  NP_0.t:<type>

V.t:<arg_type2> = VP_0.t:<arg_type2>
VP_0.t:<arg_type2> = VP_1.t:<arg_type2>
VP_1.t:<arg_type2> = VP_2.t:<arg_type2>
VP_2.t:<arg_type2> =  NP_1.t:<type>" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("NP" . ""))) (((("S" . "r"))) (((("NP" . "0")) :substp T))  (((("VP" . "2"))) (((("NP" . "1")) :substp T))  (((("VP" . "1"))) (((("S" . "2")) :substp T))  (((("VP" . "0"))) (((("V" . "")) :headp T)) ) ) ) ) ) 
("_nxp1s2VNP" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "V.t:<assign_case0> = VP_0.b:<assign_case0>
VP_0.b:<assign_case0> = VP_1.t:<assign_case0>
VP_1.t:<assign_case0> = VP_2.b:<assign_case0>
VP_2.t:<assign_case0> =  NP_0.t:<case>
NP_0.t:<case> = nom
NP_0.t:<accept_mod>=-

V.t:<assign_case1> = VP_0.b:<assign_case1>
VP_0.b:<assign_case1> = VP_1.t:<assign_case1>
VP_1.t:<assign_case1> = VP_2.b:<assign_case1>
VP_2.t:<assign_case1> =  NP_1.t:<case>

NP_1.t:<case> =adv

V.t:<tense> = VP_0.b:<tense>
VP_0.b:<tense> = VP_1.t:<tense>
VP_1.t:<tense> = VP_2.b:<tense>
VP_2.t:<tense>=S_r.b:<tense>
V.t:<clause-type> = VP_0.b:<clause-type>
VP_0.b:<clause-type> = VP_1.t:<clause-type>
VP_1.t:<clause-type> = VP_2.b:<clause-type>
VP_2.t:<clause-type>=S_r.b:<clause-type>
V.t:<ending> = VP_0.b:<ending>
VP_0.b:<ending> = VP_1.t:<ending>
VP_1.t:<ending> = VP_2.b:<ending>
VP_2.t:<ending>=S_r.b:<ending>
V.t:<pre-ending> = VP_0.b:<pre-ending>
VP_0.b:<pre-ending> = VP_1.t:<pre-ending>
VP_1.t:<pre-ending> = VP_2.b:<pre-ending>
VP_2.t:<pre-ending>=S_r.b:<pre-ending>

S_2.t:<clause-type>=subord


V.t:<case> = VP_0.t:<case>
VP_0.t:<case> = VP_1.t:<case>
VP_1.t:<case> = VP_2.b:<case>
VP_2.t:<case> = S_r.t:<case>
S_r.t:<case> = NP.b:<case>

V.t:<aux-pp> = VP_0.t:<aux-pp>
VP_0.t:<aux-pp> = VP_1.t:<aux-pp>
VP_1.t:<aux-pp> = VP_2.b:<aux-pp>
VP_2.t:<aux-pp> = S_r.t:<aux-pp>
S_r.t:<aux-pp> = NP.b:<aux-pp>

V.t:<adv-pp> = VP_0.t:<adv-pp>
VP_0.t:<adv-pp> = VP_1.t:<adv-pp>
VP_1.t:<adv-pp> = VP_2.b:<adv-pp>
VP_2.t:<adv-pp> = S_r.t:<adv-pp>
S_r.t:<adv-pp> = NP.b:<adv-pp>


V.t:<topic> = VP_0.t:<topic>
VP_0.t:<topic> = VP_1.t:<topic>
VP_1.t:<topic> = VP_2.b:<topic>
VP_2.t:<topic> = S_r.t:<topic>
S_r.t:<topic> = NP.b:<topic>


S_r.b:<clause-type> = nominal
S_r.b:<ending>=ki/um

V.t:<arg_type1> = VP_0.t:<arg_type1>
VP_0.t:<arg_type1> = VP_1.t:<arg_type1>
VP_1.t:<arg_type1> = VP_2.t:<arg_type1>
VP_2.t:<arg_type1> =  NP_0.t:<type>

V.t:<arg_type2> = VP_0.t:<arg_type2>
VP_0.t:<arg_type2> = VP_1.t:<arg_type2>
VP_1.t:<arg_type2> = VP_2.t:<arg_type2>
VP_2.t:<arg_type2> =  NP_1.t:<type>



" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("NP" . ""))) (((("S" . "r"))) (((("NP" . "0"))) (((("" . "0")))) )  (((("VP" . "2"))) (((("NP" . "1")) :substp T))  (((("VP" . "1"))) (((("S" . "2")) :substp T))  (((("VP" . "0"))) (((("V" . "")) :headp T)) ) ) ) ) ) 
("nx0nxp1s2VNP" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "NP_f.t:<case> =  NP_r.b:<case>
NP_f.t:<adv-pp> =  NP_r.b:<adv-pp>
NP_f.t:<aux-pp> =  NP_r.b:<aux-pp>
NP_f.t:<topic> =  NP_r.b:<topic>
NP_f.t:<type> =  NP_r.b:<type>

V.t:<assign_case0> = VP_0.b:<assign_case0>
VP_0.b:<assign_case0> = VP_1.t:<assign_case0>
VP_1.t:<assign_case0> = VP_2.b:<assign_case0>
VP_2.t:<assign_case0> =  NP_0.t:<case>
NP_0.t:<case> = nom
V.t:<assign_case1> = VP_0.b:<assign_case1>
VP_0.b:<assign_case1> = VP_1.t:<assign_case1>
VP_1.t:<assign_case1> = VP_2.b:<assign_case1>
VP_2.t:<assign_case1> =  NP_1.t:<case>

NP_1.t:<case> =adv

V.t:<tense> = VP_0.b:<tense>
VP_0.b:<tense> = VP_1.t:<tense>
VP_1.t:<tense> = VP_2.b:<tense>
VP_2.t:<tense>=S_r.b:<tense>
V.t:<clause-type> = VP_0.b:<clause-type>
VP_0.b:<clause-type> = VP_1.t:<clause-type>
VP_1.t:<clause-type> = VP_2.b:<clause-type>
VP_2.t:<clause-type>=S_r.b:<clause-type>
V.t:<ending> = VP_0.b:<ending>
VP_0.b:<ending> = VP_1.t:<ending>
VP_1.t:<ending> = VP_2.b:<ending>
VP_2.t:<ending>=S_r.b:<ending>
V.t:<pre-ending> = VP_0.b:<pre-ending>
VP_0.b:<pre-ending> = VP_1.t:<pre-ending>
VP_1.t:<pre-ending> = VP_2.b:<pre-ending>
VP_2.t:<pre-ending>=S_r.b:<pre-ending>

S_2.t:<clause-type>=subord


S_r.b:<clause-type> = adnom



V.t:<arg_type1> = VP_0.t:<arg_type1>
VP_0.t:<arg_type1> = VP_1.t:<arg_type1>
VP_1.t:<arg_type1> = VP_2.t:<arg_type1>
VP_2.t:<arg_type1> =  NP_0.t:<type>

V.t:<arg_type2> = VP_0.t:<arg_type2>
VP_0.t:<arg_type2> = VP_1.t:<arg_type2>
VP_1.t:<arg_type2> = VP_2.t:<arg_type2>
VP_2.t:<arg_type2> =  NP_1.t:<type>" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("NP" . "r"))) (((("S" . "r"))) (((("NP" . "0")) :substp T))  (((("VP" . "2"))) (((("NP" . "1")) :substp T))  (((("VP" . "1"))) (((("S" . "2")) :substp T))  (((("VP" . "0"))) (((("V" . "")) :headp T)) ) ) ) )  (((("NP" . "f")) :footp T :constraints "NA" :constraint-type :NA)) ) 
("_nxp1s2VNP" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "NP_f.t:<case> =  NP_r.b:<case>
NP_f.t:<aux-pp> =  NP_r.b:<aux-pp>
NP_f.t:<adv-pp> =  NP_r.b:<adv-pp>
NP_f.t:<topic> =  NP_r.b:<topic>
NP_f.t:<type> =  NP_r.b:<type>

V.t:<assign_case0> = VP_0.b:<assign_case0>
VP_0.b:<assign_case0> = VP_1.t:<assign_case0>
VP_1.t:<assign_case0> = VP_2.b:<assign_case0>
VP_2.t:<assign_case0> =  NP_0.t:<case>
NP_0.t:<case> = nom
V.t:<assign_case1> = VP_0.b:<assign_case1>
VP_0.b:<assign_case1> = VP_1.t:<assign_case1>
VP_1.t:<assign_case1> = VP_2.b:<assign_case1>
VP_2.t:<assign_case1> =  NP_1.t:<case>

NP_1.t:<case> =adv
NP_0.t:<accept_mod>=-

V.t:<tense> = VP_0.b:<tense>
VP_0.b:<tense> = VP_1.t:<tense>
VP_1.t:<tense> = VP_2.b:<tense>
VP_2.t:<tense>=S_r.b:<tense>
V.t:<clause-type> = VP_0.b:<clause-type>
VP_0.b:<clause-type> = VP_1.t:<clause-type>
VP_1.t:<clause-type> = VP_2.b:<clause-type>
VP_2.t:<clause-type>=S_r.b:<clause-type>
V.t:<ending> = VP_0.b:<ending>
VP_0.b:<ending> = VP_1.t:<ending>
VP_1.t:<ending> = VP_2.b:<ending>
VP_2.t:<ending>=S_r.b:<ending>
V.t:<pre-ending> = VP_0.b:<pre-ending>
VP_0.b:<pre-ending> = VP_1.t:<pre-ending>
VP_1.t:<pre-ending> = VP_2.b:<pre-ending>
VP_2.t:<pre-ending>=S_r.b:<pre-ending>

S_2.t:<clause-type>=subord

S_r.b:<clause-type> = adnom


V.t:<arg_type1> = VP_0.t:<arg_type1>
VP_0.t:<arg_type1> = VP_1.t:<arg_type1>
VP_1.t:<arg_type1> = VP_2.t:<arg_type1>
VP_2.t:<arg_type1> =  NP_0.t:<type>

V.t:<arg_type2> = VP_0.t:<arg_type2>
VP_0.t:<arg_type2> = VP_1.t:<arg_type2>
VP_1.t:<arg_type2> = VP_2.t:<arg_type2>
VP_2.t:<arg_type2> =  NP_1.t:<type>



" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("NP" . "r"))) (((("S" . "r"))) (((("NP" . "0"))) (((("" . "0")))) )  (((("VP" . "2"))) (((("NP" . "1")) :substp T))  (((("VP" . "1"))) (((("S" . "2")) :substp T))  (((("VP" . "0"))) (((("V" . "")) :headp T)) ) ) ) )  (((("NP" . "f")) :footp T :constraints "NA" :constraint-type :NA)) ) 
("nx0nxp1s2Vvx" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "VP_f.t:<assign_case0>=VP_r.b:<assign_case0>
VP_f.t:<tense>=VP_r.b:<tense>
VP_f.t:<mode>=VP_r.b:<mode>
VP_f.t:<clause-type>=VP_r.b:<clause-type>
VP_f.t:<ending>=VP_r.b:<ending>
VP_f.t:<pre-ending>=VP_r.b:<pre-ending>

V.t:<assign_case0> = VP_0.b:<assign_case0>
VP_0.b:<assign_case0> = VP_1.t:<assign_case0>
VP_1.t:<assign_case0> = VP_2.b:<assign_case0>
VP_2.t:<assign_case0> =  NP_0.t:<case>
NP_0.t:<case> = nom
V.t:<assign_case1> = VP_0.b:<assign_case1>
VP_0.b:<assign_case1> = VP_1.t:<assign_case1>
VP_1.t:<assign_case1> = VP_2.b:<assign_case1>
VP_2.t:<assign_case1> =  NP_1.t:<case>

NP_1.t:<case> =adv

V.t:<tense> = VP_0.b:<tense>
VP_0.b:<tense> = VP_1.t:<tense>
VP_1.t:<tense> = VP_2.b:<tense>
VP_2.t:<tense>=S_r.b:<tense>
V.t:<mode> = VP_0.b:<mode>
VP_0.b:<mode> = VP_1.t:<mode>
VP_1.t:<mode> = VP_2.b:<mode>
VP_2.t:<mode>=S_r.b:<mode>
V.t:<clause-type> = VP_0.b:<clause-type>
VP_0.b:<clause-type> = VP_1.t:<clause-type>
VP_1.t:<clause-type> = VP_2.b:<clause-type>
VP_2.t:<clause-type>=S_r.b:<clause-type>
V.t:<ending> = VP_0.b:<ending>
VP_0.b:<ending> = VP_1.t:<ending>
VP_1.t:<ending> = VP_2.b:<ending>
VP_2.t:<ending>=S_r.b:<ending>
V.t:<pre-ending> = VP_0.b:<pre-ending>
VP_0.b:<pre-ending> = VP_1.t:<pre-ending>
VP_1.t:<pre-ending> = VP_2.b:<pre-ending>
VP_2.t:<pre-ending>=S_r.b:<pre-ending>

S_2.t:<clause-type>=subord


S_r.b:<clause-type> = coord/subord



V.t:<arg_type1> = VP_0.t:<arg_type1>
VP_0.t:<arg_type1> = VP_1.t:<arg_type1>
VP_1.t:<arg_type1> = VP_2.t:<arg_type1>
VP_2.t:<arg_type1> =  NP_0.t:<type>

V.t:<arg_type2> = VP_0.t:<arg_type2>
VP_0.t:<arg_type2> = VP_1.t:<arg_type2>
VP_1.t:<arg_type2> = VP_2.t:<arg_type2>
VP_2.t:<arg_type2> =  NP_1.t:<type>" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("VP" . "r"))) (((("S" . "r"))) (((("NP" . "0")) :substp T))  (((("VP" . "2"))) (((("NP" . "1")) :substp T))  (((("VP" . "1"))) (((("S" . "2")) :substp T))  (((("VP" . "0"))) (((("V" . "")) :headp T)) ) ) ) )  (((("VP" . "f")) :footp T :constraints "NA" :constraint-type :NA)) ) 
("_nxp1s2Vvx" :COMMENT-DISPLAY? NIL :FEATURE-DISPLAY? NIL :EQUATION-DISPLAY? NIL :UNIFICATION-EQUATIONS "VP_f.t:<assign_case0>=VP_r.b:<assign_case0>
VP_f.t:<tense>=VP_r.b:<tense>
VP_f.t:<mode>=VP_r.b:<mode>
VP_f.t:<clause-type>=VP_r.b:<clause-type>
VP_f.t:<ending>=VP_r.b:<ending>
VP_f.t:<pre-ending>=VP_r.b:<pre-ending>

V.t:<assign_case0> = VP_0.b:<assign_case0>
VP_0.b:<assign_case0> = VP_1.t:<assign_case0>
VP_1.t:<assign_case0> = VP_2.b:<assign_case0>
VP_2.t:<assign_case0> =  NP_0.t:<case>
NP_0.t:<case> = nom
V.t:<assign_case1> = VP_0.b:<assign_case1>
VP_0.b:<assign_case1> = VP_1.t:<assign_case1>
VP_1.t:<assign_case1> = VP_2.b:<assign_case1>
VP_2.t:<assign_case1> =  NP_1.t:<case>

NP_1.t:<case> =adv
NP_0.t:<accept_mod>=-

V.t:<tense> = VP_0.b:<tense>
VP_0.b:<tense> = VP_1.t:<tense>
VP_1.t:<tense> = VP_2.b:<tense>
VP_2.t:<tense>=S_r.b:<tense>
V.t:<mode> = VP_0.b:<mode>
VP_0.b:<mode> = VP_1.t:<mode>
VP_1.t:<mode> = VP_2.b:<mode>
VP_2.t:<mode>=S_r.b:<mode>
V.t:<clause-type> = VP_0.b:<clause-type>
VP_0.b:<clause-type> = VP_1.t:<clause-type>
VP_1.t:<clause-type> = VP_2.b:<clause-type>
VP_2.t:<clause-type>=S_r.b:<clause-type>
V.t:<ending> = VP_0.b:<ending>
VP_0.b:<ending> = VP_1.t:<ending>
VP_1.t:<ending> = VP_2.b:<ending>
VP_2.t:<ending>=S_r.b:<ending>
V.t:<pre-ending> = VP_0.b:<pre-ending>
VP_0.b:<pre-ending> = VP_1.t:<pre-ending>
VP_1.t:<pre-ending> = VP_2.b:<pre-ending>
VP_2.t:<pre-ending>=S_r.b:<pre-ending>

S_2.t:<clause-type>=subord

S_r.b:<clause-type> = coord/subord


V.t:<arg_type1> = VP_0.t:<arg_type1>
VP_0.t:<arg_type1> = VP_1.t:<arg_type1>
VP_1.t:<arg_type1> = VP_2.t:<arg_type1>
VP_2.t:<arg_type1> =  NP_0.t:<type>

V.t:<arg_type2> = VP_0.t:<arg_type2>
VP_0.t:<arg_type2> = VP_1.t:<arg_type2>
VP_1.t:<arg_type2> = VP_2.t:<arg_type2>
VP_2.t:<arg_type2> =  NP_1.t:<type>



" :COMMENTS NIL :SHAPE NIL :BORDER-WIDTH NIL :CONSTRAINT-STYLE NIL :CONNECTOR NIL :DEFAULT-STYLE NIL :SUBSCRIPT-STYLE NIL :WHITE-SPACE NIL  :MINIMUM-NODE-SEPARATION NIL :LEVEL-SEPARATION NIL)
 (((("VP" . "r"))) (((("S" . "r"))) (((("NP" . "0"))) (((("" . "0")))) )  (((("VP" . "2"))) (((("NP" . "1")) :substp T))  (((("VP" . "1"))) (((("S" . "2")) :substp T))  (((("VP" . "0"))) (((("V" . "")) :headp T)) ) ) ) )  (((("VP" . "f")) :footp T :constraints "NA" :constraint-type :NA)) ) 
